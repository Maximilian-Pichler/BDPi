---
# INSTALL SUPERSET #
################################################################################################################### 
- name: check if superset environment is present
  stat: path={{ home_dir }}/archiconda3/envs/superset/bin/python
  register: superset

- name: setup superset conda-env
  expect:
    command: "{{ home_dir }}/archiconda3/bin/conda create --name superset python=3.7.1"
    responses:
        'Proceed': 'y'
    timeout: 36000
  when: superset.stat.exists == False

- name: install pandas (conda-forge)
  expect:
    command: "{{ home_dir }}/archiconda3/bin/conda install --name superset -c conda-forge pandas==1.2.4"
    responses:
        'Proceed': 'y'
    timeout: 36000
  when: superset.stat.exists == False

- name: install pyarrow (conda-forge)
  expect:
    command: "{{ home_dir }}/archiconda3/bin/conda install --name superset -c conda-forge pyarrow==3.0.0"
    responses:
        'Proceed': 'y'
    timeout: 36000
  when: superset.stat.exists == False

- name: upgrade pip
  pip: 
    name: pip
    executable: "{{ home_dir }}/archiconda3/envs/superset/bin/pip"
    state: latest

- name: install superset
  pip: 
    name: "{{ item }}"
    executable: "{{ home_dir }}/archiconda3/envs/superset/bin/pip"
  loop:
    - setuptools
    - mysqlclient
    - PyJWT
    - apache-superset

## SETUP SUPERSET USERS
- name: setup superset
  become: yes
  become_user: '{{ ansible_user }}'
  shell: "source {{ home_dir }}/archiconda3/bin/activate superset && {{ item }}"
  args:
    executable: /bin/bash
  loop: 
    - "superset db upgrade"
    - "export FLASK_APP=superset && superset fab create-admin --username {{ ansible_user }} --firstname Maximilian --lastname Pichler --email {{ ansible_user }}@{{ ansible_user }}.com --password {{ default_password }}"
    - "export FLASK_APP=superset && superset init"

## CONFIGURE SUPERSET SERVICE
- name: define service variables
  set_fact:
    service_description: "superset"
    service_user: "{{ ansible_user }}"
    service_environment: "PATH={{ ansible_env.PATH }}:{{ home_dir }}/archiconda3/envs/superset/bin"
    service_workdir: "{{ home_dir }}"
    service_execstart: "{{ home_dir }}/archiconda3/envs/superset/bin/superset run -h 0.0.0.0  -p 8088 --reload --debugger"
    service_execstop: ""

- name: create {{ service_description }} service file
  template:
    src: templates/sample.service.j2
    dest: /etc/systemd/system/{{ service_description }}.service

- name: enable and restart {{ service_description }} service
  systemd:
    state: restarted
    enabled: yes
    daemon_reload: yes
    name: "{{ service_description }}"
  notify: reboot